{"version":3,"file":"index-5IENmkzx.js","sources":["../../src/pages/transaction-history/components/TransactionCard.jsx","../../src/pages/transaction-history/components/FilterBar.jsx","../../src/pages/transaction-history/components/MonthlyGroupHeader.jsx","../../src/pages/transaction-history/components/TransactionDetailsModal.jsx","../../src/pages/transaction-history/components/ExportModal.jsx","../../src/pages/transaction-history/components/SpendingAnalytics.jsx","../../src/pages/transaction-history/index.jsx"],"sourcesContent":["import React from 'react';\nimport Icon from '../../../components/AppIcon';\n\nconst TransactionCard = ({ \n  transaction, \n  onSelect, \n  isSelected = false, \n  showAccount = false,\n  onDispute \n}) => {\n  const formatAmount = (amount) => {\n    return new Intl.NumberFormat('fr-FR', {\n      style: 'currency',\n      currency: 'EUR'\n    })?.format(Math.abs(amount));\n  };\n\n  const formatDate = (date) => {\n    return new Intl.DateTimeFormat('fr-FR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    })?.format(new Date(date));\n  };\n\n  const formatTime = (date) => {\n    return new Intl.DateTimeFormat('fr-FR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    })?.format(new Date(date));\n  };\n\n  const getCategoryIcon = (category) => {\n    const icons = {\n      'shopping': 'ShoppingBag',\n      'food': 'UtensilsCrossed',\n      'transport': 'Car',\n      'entertainment': 'Film',\n      'health': 'Heart',\n      'utilities': 'Zap',\n      'salary': 'Banknote',\n      'transfer': 'ArrowLeftRight',\n      'investment': 'TrendingUp',\n      'subscription': 'RefreshCw',\n      'cash': 'Banknote',\n      'other': 'MoreHorizontal'\n    };\n    return icons?.[category] || 'MoreHorizontal';\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'completed': return 'text-success';\n      case 'pending': return 'text-warning';\n      case 'failed': return 'text-error';\n      default: return 'text-muted-foreground';\n    }\n  };\n\n  const getStatusBg = (status) => {\n    switch (status) {\n      case 'completed': return 'bg-success/10';\n      case 'pending': return 'bg-warning/10';\n      case 'failed': return 'bg-error/10';\n      default: return 'bg-muted/10';\n    }\n  };\n\n  return (\n    <div \n      className={`bg-card border border-border rounded-lg p-4 transition-smooth hover:shadow-elevation-2 cursor-pointer ${\n        isSelected ? 'ring-2 ring-primary/20 border-primary' : ''\n      }`}\n      onClick={() => onSelect && onSelect(transaction)}\n    >\n      <div className=\"flex items-start justify-between\">\n        <div className=\"flex items-start space-x-3 flex-1\">\n          {/* Category Icon */}\n          <div className={`w-10 h-10 rounded-lg flex items-center justify-center flex-shrink-0 ${\n            transaction?.type === 'credit' ? 'bg-success/10' : 'bg-primary/10'\n          }`}>\n            <Icon \n              name={getCategoryIcon(transaction?.category)} \n              size={20} \n              color={transaction?.type === 'credit' ? 'var(--color-success)' : 'var(--color-primary)'} \n            />\n          </div>\n\n          {/* Transaction Details */}\n          <div className=\"flex-1 min-w-0\">\n            <div className=\"flex items-start justify-between mb-1\">\n              <h3 className=\"font-medium text-foreground truncate pr-2\">\n                {transaction?.merchant || transaction?.description}\n              </h3>\n              <div className=\"text-right flex-shrink-0\">\n                <div className={`font-mono font-semibold ${\n                  transaction?.type === 'credit' ? 'text-success' : 'text-foreground'\n                }`}>\n                  {transaction?.type === 'credit' ? '+' : '-'}{formatAmount(transaction?.amount)}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-between text-sm text-muted-foreground\">\n              <div className=\"flex items-center space-x-2\">\n                <span>{formatDate(transaction?.date)}</span>\n                <span>•</span>\n                <span>{formatTime(transaction?.date)}</span>\n                {transaction?.reference && (\n                  <>\n                    <span>•</span>\n                    <span className=\"font-mono text-xs\">{transaction?.reference}</span>\n                  </>\n                )}\n              </div>\n            </div>\n\n            {/* Account Info (if showing multiple accounts) */}\n            {showAccount && transaction?.account && (\n              <div className=\"flex items-center space-x-1 mt-2\">\n                <Icon name=\"CreditCard\" size={12} className=\"text-muted-foreground\" />\n                <span className=\"text-xs text-muted-foreground\">{transaction?.account}</span>\n              </div>\n            )}\n\n            {/* Status Badge */}\n            <div className=\"flex items-center justify-between mt-2\">\n              <div className={`inline-flex items-center space-x-1 px-2 py-1 rounded-full text-xs font-medium ${getStatusBg(transaction?.status)} ${getStatusColor(transaction?.status)}`}>\n                <div className={`w-1.5 h-1.5 rounded-full ${\n                  transaction?.status === 'completed' ? 'bg-success' :\n                  transaction?.status === 'pending' ? 'bg-warning' : 'bg-error'\n                }`} />\n                <span>\n                  {transaction?.status === 'completed' ? 'Terminé' :\n                   transaction?.status === 'pending' ? 'En attente' : 'Échoué'}\n                </span>\n              </div>\n\n              {/* Action Menu */}\n              <div className=\"flex items-center space-x-1\">\n                {transaction?.status === 'completed' && transaction?.type === 'debit' && (\n                  <button\n                    onClick={(e) => {\n                      e?.stopPropagation();\n                      onDispute && onDispute(transaction);\n                    }}\n                    className=\"p-1 text-muted-foreground hover:text-foreground transition-smooth\"\n                    title=\"Contester\"\n                  >\n                    <Icon name=\"AlertTriangle\" size={14} />\n                  </button>\n                )}\n                <button\n                  onClick={(e) => e?.stopPropagation()}\n                  className=\"p-1 text-muted-foreground hover:text-foreground transition-smooth\"\n                  title=\"Plus d'options\"\n                >\n                  <Icon name=\"MoreVertical\" size={14} />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TransactionCard;","import React, { useState } from 'react';\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\nimport Input from '../../../components/ui/Input';\n\nconst FilterBar = ({ \n  filters, \n  onFiltersChange, \n  onClearFilters,\n  isSticky = false \n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [dateRange, setDateRange] = useState({\n    start: filters?.dateStart || '',\n    end: filters?.dateEnd || ''\n  });\n  const [amountRange, setAmountRange] = useState({\n    min: filters?.amountMin || '',\n    max: filters?.amountMax || ''\n  });\n\n  const categories = [\n    { id: 'shopping', label: 'Achats', icon: 'ShoppingBag' },\n    { id: 'food', label: 'Alimentation', icon: 'UtensilsCrossed' },\n    { id: 'transport', label: 'Transport', icon: 'Car' },\n    { id: 'entertainment', label: 'Loisirs', icon: 'Film' },\n    { id: 'health', label: 'Santé', icon: 'Heart' },\n    { id: 'utilities', label: 'Services', icon: 'Zap' },\n    { id: 'salary', label: 'Salaire', icon: 'Banknote' },\n    { id: 'transfer', label: 'Virement', icon: 'ArrowLeftRight' },\n    { id: 'investment', label: 'Investissement', icon: 'TrendingUp' },\n    { id: 'subscription', label: 'Abonnement', icon: 'RefreshCw' }\n  ];\n\n  const transactionTypes = [\n    { id: 'all', label: 'Tous' },\n    { id: 'credit', label: 'Crédits' },\n    { id: 'debit', label: 'Débits' },\n    { id: 'pending', label: 'En attente' }\n  ];\n\n  const handleCategoryToggle = (categoryId) => {\n    const currentCategories = filters?.categories || [];\n    const newCategories = currentCategories?.includes(categoryId)\n      ? currentCategories?.filter(id => id !== categoryId)\n      : [...currentCategories, categoryId];\n    \n    onFiltersChange({ ...filters, categories: newCategories });\n  };\n\n  const handleTypeChange = (type) => {\n    onFiltersChange({ ...filters, type });\n  };\n\n  const handleDateRangeChange = (field, value) => {\n    const newRange = { ...dateRange, [field]: value };\n    setDateRange(newRange);\n    onFiltersChange({ \n      ...filters, \n      dateStart: newRange?.start, \n      dateEnd: newRange?.end \n    });\n  };\n\n  const handleAmountRangeChange = (field, value) => {\n    const newRange = { ...amountRange, [field]: value };\n    setAmountRange(newRange);\n    onFiltersChange({ \n      ...filters, \n      amountMin: newRange?.min, \n      amountMax: newRange?.max \n    });\n  };\n\n  const getActiveFiltersCount = () => {\n    let count = 0;\n    if (filters?.categories?.length > 0) count++;\n    if (filters?.type && filters?.type !== 'all') count++;\n    if (filters?.dateStart || filters?.dateEnd) count++;\n    if (filters?.amountMin || filters?.amountMax) count++;\n    if (filters?.search) count++;\n    return count;\n  };\n\n  const activeFiltersCount = getActiveFiltersCount();\n\n  return (\n    <div className={`bg-card border-b border-border transition-smooth ${\n      isSticky ? 'sticky top-16 z-30 shadow-elevation-1' : ''\n    }`}>\n      <div className=\"p-4\">\n        {/* Mobile Filter Toggle */}\n        <div className=\"flex items-center justify-between lg:hidden mb-4\">\n          <Button\n            variant=\"outline\"\n            onClick={() => setIsExpanded(!isExpanded)}\n            iconName={isExpanded ? \"ChevronUp\" : \"Filter\"}\n            iconPosition=\"left\"\n          >\n            Filtres\n            {activeFiltersCount > 0 && (\n              <span className=\"ml-2 px-2 py-0.5 bg-primary text-primary-foreground text-xs rounded-full\">\n                {activeFiltersCount}\n              </span>\n            )}\n          </Button>\n          \n          {activeFiltersCount > 0 && (\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={onClearFilters}\n              iconName=\"X\"\n              iconPosition=\"left\"\n            >\n              Effacer\n            </Button>\n          )}\n        </div>\n\n        {/* Search Bar */}\n        <div className=\"mb-4\">\n          <div className=\"relative\">\n            <Icon name=\"Search\" size={16} className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\" />\n            <Input\n              type=\"search\"\n              placeholder=\"Rechercher par marchand, description...\"\n              value={filters?.search || ''}\n              onChange={(e) => onFiltersChange({ ...filters, search: e?.target?.value })}\n              className=\"pl-10\"\n            />\n          </div>\n        </div>\n\n        {/* Filter Content */}\n        <div className={`space-y-4 ${isExpanded || window.innerWidth >= 1024 ? 'block' : 'hidden lg:block'}`}>\n          {/* Transaction Types */}\n          <div>\n            <h3 className=\"text-sm font-medium text-foreground mb-2\">Type de transaction</h3>\n            <div className=\"flex flex-wrap gap-2\">\n              {transactionTypes?.map((type) => (\n                <button\n                  key={type?.id}\n                  onClick={() => handleTypeChange(type?.id)}\n                  className={`px-3 py-1.5 rounded-full text-sm font-medium transition-smooth ${\n                    (filters?.type || 'all') === type?.id\n                      ? 'bg-primary text-primary-foreground' :'bg-muted text-muted-foreground hover:bg-muted/80'\n                  }`}\n                >\n                  {type?.label}\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* Date Range */}\n          <div>\n            <h3 className=\"text-sm font-medium text-foreground mb-2\">Période</h3>\n            <div className=\"grid grid-cols-2 gap-3\">\n              <Input\n                type=\"date\"\n                label=\"Du\"\n                value={dateRange?.start}\n                onChange={(e) => handleDateRangeChange('start', e?.target?.value)}\n              />\n              <Input\n                type=\"date\"\n                label=\"Au\"\n                value={dateRange?.end}\n                onChange={(e) => handleDateRangeChange('end', e?.target?.value)}\n              />\n            </div>\n          </div>\n\n          {/* Amount Range */}\n          <div>\n            <h3 className=\"text-sm font-medium text-foreground mb-2\">Montant</h3>\n            <div className=\"grid grid-cols-2 gap-3\">\n              <Input\n                type=\"number\"\n                label=\"Min (€)\"\n                placeholder=\"0\"\n                value={amountRange?.min}\n                onChange={(e) => handleAmountRangeChange('min', e?.target?.value)}\n              />\n              <Input\n                type=\"number\"\n                label=\"Max (€)\"\n                placeholder=\"1000\"\n                value={amountRange?.max}\n                onChange={(e) => handleAmountRangeChange('max', e?.target?.value)}\n              />\n            </div>\n          </div>\n\n          {/* Categories */}\n          <div>\n            <h3 className=\"text-sm font-medium text-foreground mb-2\">Catégories</h3>\n            <div className=\"flex flex-wrap gap-2\">\n              {categories?.map((category) => {\n                const isSelected = filters?.categories?.includes(category?.id);\n                return (\n                  <button\n                    key={category?.id}\n                    onClick={() => handleCategoryToggle(category?.id)}\n                    className={`flex items-center space-x-2 px-3 py-2 rounded-lg text-sm font-medium transition-smooth ${\n                      isSelected\n                        ? 'bg-primary text-primary-foreground'\n                        : 'bg-muted text-muted-foreground hover:bg-muted/80'\n                    }`}\n                  >\n                    <Icon name={category?.icon} size={14} />\n                    <span>{category?.label}</span>\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Desktop Clear Filters */}\n          {activeFiltersCount > 0 && (\n            <div className=\"hidden lg:flex justify-end pt-2\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={onClearFilters}\n                iconName=\"X\"\n                iconPosition=\"left\"\n              >\n                Effacer tous les filtres\n              </Button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterBar;","import React from 'react';\nimport Icon from '../../../components/AppIcon';\n\nconst MonthlyGroupHeader = ({ \n  month, \n  year, \n  totalTransactions, \n  totalIncome, \n  totalExpenses,\n  isCollapsed = false,\n  onToggle \n}) => {\n  const formatAmount = (amount) => {\n    return new Intl.NumberFormat('fr-FR', {\n      style: 'currency',\n      currency: 'EUR'\n    })?.format(amount);\n  };\n\n  const getMonthName = (month) => {\n    const months = [\n      'Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin',\n      'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'\n    ];\n    return months?.[month - 1];\n  };\n\n  const netAmount = totalIncome - totalExpenses;\n\n  return (\n    <div className=\"bg-muted/30 border-y border-border sticky top-32 z-20\">\n      <button\n        onClick={onToggle}\n        className=\"w-full p-4 text-left hover:bg-muted/50 transition-smooth\"\n      >\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <Icon \n              name={isCollapsed ? \"ChevronRight\" : \"ChevronDown\"} \n              size={16} \n              className=\"text-muted-foreground\" \n            />\n            <div>\n              <h2 className=\"text-lg font-semibold text-foreground\">\n                {getMonthName(month)} {year}\n              </h2>\n              <p className=\"text-sm text-muted-foreground\">\n                {totalTransactions} transaction{totalTransactions > 1 ? 's' : ''}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"text-right\">\n            <div className=\"flex items-center space-x-4\">\n              {/* Income */}\n              <div className=\"text-right\">\n                <div className=\"text-xs text-muted-foreground\">Revenus</div>\n                <div className=\"font-mono font-semibold text-success\">\n                  +{formatAmount(totalIncome)}\n                </div>\n              </div>\n\n              {/* Expenses */}\n              <div className=\"text-right\">\n                <div className=\"text-xs text-muted-foreground\">Dépenses</div>\n                <div className=\"font-mono font-semibold text-foreground\">\n                  -{formatAmount(totalExpenses)}\n                </div>\n              </div>\n\n              {/* Net */}\n              <div className=\"text-right\">\n                <div className=\"text-xs text-muted-foreground\">Solde</div>\n                <div className={`font-mono font-semibold ${\n                  netAmount >= 0 ? 'text-success' : 'text-error'\n                }`}>\n                  {netAmount >= 0 ? '+' : ''}{formatAmount(netAmount)}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Mobile Summary */}\n        <div className=\"lg:hidden mt-3 pt-3 border-t border-border/50\">\n          <div className=\"grid grid-cols-3 gap-4 text-center\">\n            <div>\n              <div className=\"text-xs text-muted-foreground\">Revenus</div>\n              <div className=\"font-mono text-sm font-semibold text-success\">\n                +{formatAmount(totalIncome)}\n              </div>\n            </div>\n            <div>\n              <div className=\"text-xs text-muted-foreground\">Dépenses</div>\n              <div className=\"font-mono text-sm font-semibold text-foreground\">\n                -{formatAmount(totalExpenses)}\n              </div>\n            </div>\n            <div>\n              <div className=\"text-xs text-muted-foreground\">Solde</div>\n              <div className={`font-mono text-sm font-semibold ${\n                netAmount >= 0 ? 'text-success' : 'text-error'\n              }`}>\n                {netAmount >= 0 ? '+' : ''}{formatAmount(netAmount)}\n              </div>\n            </div>\n          </div>\n        </div>\n      </button>\n    </div>\n  );\n};\n\nexport default MonthlyGroupHeader;","import React from 'react';\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\n\nconst TransactionDetailsModal = ({ \n  transaction, \n  isOpen, \n  onClose, \n  onDispute \n}) => {\n  if (!isOpen || !transaction) return null;\n\n  const formatAmount = (amount) => {\n    return new Intl.NumberFormat('fr-FR', {\n      style: 'currency',\n      currency: 'EUR'\n    })?.format(Math.abs(amount));\n  };\n\n  const formatDate = (date) => {\n    return new Intl.DateTimeFormat('fr-FR', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    })?.format(new Date(date));\n  };\n\n  const getCategoryIcon = (category) => {\n    const icons = {\n      'shopping': 'ShoppingBag',\n      'food': 'UtensilsCrossed',\n      'transport': 'Car',\n      'entertainment': 'Film',\n      'health': 'Heart',\n      'utilities': 'Zap',\n      'salary': 'Banknote',\n      'transfer': 'ArrowLeftRight',\n      'investment': 'TrendingUp',\n      'subscription': 'RefreshCw',\n      'cash': 'Banknote',\n      'other': 'MoreHorizontal'\n    };\n    return icons?.[category] || 'MoreHorizontal';\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'completed': return 'text-success';\n      case 'pending': return 'text-warning';\n      case 'failed': return 'text-error';\n      default: return 'text-muted-foreground';\n    }\n  };\n\n  const getStatusBg = (status) => {\n    switch (status) {\n      case 'completed': return 'bg-success/10';\n      case 'pending': return 'bg-warning/10';\n      case 'failed': return 'bg-error/10';\n      default: return 'bg-muted/10';\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-background/80 backdrop-blur-sm\">\n      <div className=\"bg-card border border-border rounded-lg shadow-elevation-3 w-full max-w-lg mx-4 max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-border\">\n          <h2 className=\"text-xl font-semibold text-foreground\">Détails de la transaction</h2>\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            onClick={onClose}\n          >\n            <Icon name=\"X\" size={20} />\n          </Button>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6 space-y-6\">\n          {/* Transaction Overview */}\n          <div className=\"text-center\">\n            <div className={`w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4 ${\n              transaction?.type === 'credit' ? 'bg-success/10' : 'bg-primary/10'\n            }`}>\n              <Icon \n                name={getCategoryIcon(transaction?.category)} \n                size={32} \n                color={transaction?.type === 'credit' ? 'var(--color-success)' : 'var(--color-primary)'} \n              />\n            </div>\n            \n            <div className={`text-3xl font-mono font-bold mb-2 ${\n              transaction?.type === 'credit' ? 'text-success' : 'text-foreground'\n            }`}>\n              {transaction?.type === 'credit' ? '+' : '-'}{formatAmount(transaction?.amount)}\n            </div>\n            \n            <h3 className=\"text-lg font-medium text-foreground mb-1\">\n              {transaction?.merchant || transaction?.description}\n            </h3>\n            \n            <p className=\"text-muted-foreground\">\n              {formatDate(transaction?.date)}\n            </p>\n          </div>\n\n          {/* Status */}\n          <div className=\"flex justify-center\">\n            <div className={`inline-flex items-center space-x-2 px-4 py-2 rounded-full font-medium ${getStatusBg(transaction?.status)} ${getStatusColor(transaction?.status)}`}>\n              <div className={`w-2 h-2 rounded-full ${\n                transaction?.status === 'completed' ? 'bg-success' :\n                transaction?.status === 'pending' ? 'bg-warning' : 'bg-error'\n              }`} />\n              <span>\n                {transaction?.status === 'completed' ? 'Transaction terminée' :\n                 transaction?.status === 'pending' ? 'Transaction en attente' : 'Transaction échouée'}\n              </span>\n            </div>\n          </div>\n\n          {/* Transaction Details */}\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"text-sm font-medium text-muted-foreground\">Référence</label>\n                <p className=\"font-mono text-sm text-foreground mt-1\">\n                  {transaction?.reference || 'N/A'}\n                </p>\n              </div>\n              <div>\n                <label className=\"text-sm font-medium text-muted-foreground\">Catégorie</label>\n                <p className=\"text-sm text-foreground mt-1 capitalize\">\n                  {transaction?.category}\n                </p>\n              </div>\n            </div>\n\n            {transaction?.account && (\n              <div>\n                <label className=\"text-sm font-medium text-muted-foreground\">Compte</label>\n                <p className=\"text-sm text-foreground mt-1\">{transaction?.account}</p>\n              </div>\n            )}\n\n            {transaction?.location && (\n              <div>\n                <label className=\"text-sm font-medium text-muted-foreground\">Lieu</label>\n                <p className=\"text-sm text-foreground mt-1\">{transaction?.location}</p>\n              </div>\n            )}\n\n            {transaction?.description && transaction?.description !== transaction?.merchant && (\n              <div>\n                <label className=\"text-sm font-medium text-muted-foreground\">Description</label>\n                <p className=\"text-sm text-foreground mt-1\">{transaction?.description}</p>\n              </div>\n            )}\n\n            {transaction?.balance && (\n              <div>\n                <label className=\"text-sm font-medium text-muted-foreground\">Solde après transaction</label>\n                <p className=\"font-mono text-sm text-foreground mt-1\">\n                  {formatAmount(transaction?.balance)}\n                </p>\n              </div>\n            )}\n          </div>\n\n          {/* Additional Information */}\n          {transaction?.additionalInfo && (\n            <div className=\"p-4 bg-muted/30 rounded-lg\">\n              <h4 className=\"font-medium text-foreground mb-2\">Informations complémentaires</h4>\n              <p className=\"text-sm text-muted-foreground\">{transaction?.additionalInfo}</p>\n            </div>\n          )}\n\n          {/* Actions */}\n          <div className=\"flex flex-col space-y-3 pt-4 border-t border-border\">\n            <div className=\"grid grid-cols-2 gap-3\">\n              <Button\n                variant=\"outline\"\n                iconName=\"Download\"\n                iconPosition=\"left\"\n                onClick={() => console.log('Export transaction')}\n              >\n                Exporter\n              </Button>\n              <Button\n                variant=\"outline\"\n                iconName=\"Printer\"\n                iconPosition=\"left\"\n                onClick={() => console.log('Print transaction')}\n              >\n                Imprimer\n              </Button>\n            </div>\n\n            {transaction?.status === 'completed' && transaction?.type === 'debit' && (\n              <Button\n                variant=\"destructive\"\n                iconName=\"AlertTriangle\"\n                iconPosition=\"left\"\n                onClick={() => {\n                  onDispute && onDispute(transaction);\n                  onClose();\n                }}\n              >\n                Contester cette transaction\n              </Button>\n            )}\n\n            <Button\n              variant=\"ghost\"\n              iconName=\"MessageCircle\"\n              iconPosition=\"left\"\n              onClick={() => console.log('Contact support')}\n            >\n              Contacter le support\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TransactionDetailsModal;","import React, { useState } from 'react';\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\nimport Input from '../../../components/ui/Input';\n\nconst ExportModal = ({ \n  isOpen, \n  onClose, \n  onExport \n}) => {\n  const [exportFormat, setExportFormat] = useState('pdf');\n  const [dateRange, setDateRange] = useState({\n    start: '',\n    end: ''\n  });\n  const [includeOptions, setIncludeOptions] = useState({\n    balance: true,\n    categories: true,\n    references: true,\n    locations: false\n  });\n  const [isExporting, setIsExporting] = useState(false);\n\n  if (!isOpen) return null;\n\n  const handleExport = async () => {\n    setIsExporting(true);\n    \n    // Simulate export process\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    \n    const exportData = {\n      format: exportFormat,\n      dateRange,\n      includeOptions,\n      filename: `transactions_${dateRange?.start}_${dateRange?.end}.${exportFormat}`\n    };\n    \n    onExport && onExport(exportData);\n    setIsExporting(false);\n    onClose();\n  };\n\n  const formatOptions = [\n    { id: 'pdf', label: 'PDF', description: 'Relevé formaté pour impression', icon: 'FileText' },\n    { id: 'csv', label: 'CSV', description: 'Données pour tableur (Excel, Sheets)', icon: 'Table' },\n    { id: 'json', label: 'JSON', description: 'Format de données structurées', icon: 'Code' }\n  ];\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-background/80 backdrop-blur-sm\">\n      <div className=\"bg-card border border-border rounded-lg shadow-elevation-3 w-full max-w-md mx-4\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-border\">\n          <h2 className=\"text-xl font-semibold text-foreground\">Exporter les transactions</h2>\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            onClick={onClose}\n            disabled={isExporting}\n          >\n            <Icon name=\"X\" size={20} />\n          </Button>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6 space-y-6\">\n          {/* Format Selection */}\n          <div>\n            <h3 className=\"text-sm font-medium text-foreground mb-3\">Format d'export</h3>\n            <div className=\"space-y-2\">\n              {formatOptions?.map((format) => (\n                <button\n                  key={format?.id}\n                  onClick={() => setExportFormat(format?.id)}\n                  disabled={isExporting}\n                  className={`w-full p-3 rounded-lg border text-left transition-smooth ${\n                    exportFormat === format?.id\n                      ? 'border-primary bg-primary/5' :'border-border hover:bg-muted/50'\n                  }`}\n                >\n                  <div className=\"flex items-start space-x-3\">\n                    <div className={`w-8 h-8 rounded-lg flex items-center justify-center ${\n                      exportFormat === format?.id ? 'bg-primary/10' : 'bg-muted'\n                    }`}>\n                      <Icon \n                        name={format?.icon} \n                        size={16} \n                        color={exportFormat === format?.id ? 'var(--color-primary)' : 'var(--color-muted-foreground)'} \n                      />\n                    </div>\n                    <div className=\"flex-1\">\n                      <div className=\"font-medium text-foreground\">{format?.label}</div>\n                      <div className=\"text-sm text-muted-foreground\">{format?.description}</div>\n                    </div>\n                    {exportFormat === format?.id && (\n                      <Icon name=\"Check\" size={16} className=\"text-primary\" />\n                    )}\n                  </div>\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* Date Range */}\n          <div>\n            <h3 className=\"text-sm font-medium text-foreground mb-3\">Période</h3>\n            <div className=\"grid grid-cols-2 gap-3\">\n              <Input\n                type=\"date\"\n                label=\"Du\"\n                value={dateRange?.start}\n                onChange={(e) => setDateRange(prev => ({ ...prev, start: e?.target?.value }))}\n                disabled={isExporting}\n              />\n              <Input\n                type=\"date\"\n                label=\"Au\"\n                value={dateRange?.end}\n                onChange={(e) => setDateRange(prev => ({ ...prev, end: e?.target?.value }))}\n                disabled={isExporting}\n              />\n            </div>\n          </div>\n\n          {/* Include Options */}\n          <div>\n            <h3 className=\"text-sm font-medium text-foreground mb-3\">Informations à inclure</h3>\n            <div className=\"space-y-3\">\n              {Object.entries({\n                balance: 'Solde après transaction',\n                categories: 'Catégories',\n                references: 'Références de transaction',\n                locations: 'Lieux des transactions'\n              })?.map(([key, label]) => (\n                <label key={key} className=\"flex items-center space-x-3 cursor-pointer\">\n                  <input\n                    type=\"checkbox\"\n                    checked={includeOptions?.[key]}\n                    onChange={(e) => setIncludeOptions(prev => ({ \n                      ...prev, \n                      [key]: e?.target?.checked \n                    }))}\n                    disabled={isExporting}\n                    className=\"w-4 h-4 text-primary border-border rounded focus:ring-primary/20\"\n                  />\n                  <span className=\"text-sm text-foreground\">{label}</span>\n                </label>\n              ))}\n            </div>\n          </div>\n\n          {/* Export Info */}\n          <div className=\"p-3 bg-muted/30 rounded-lg\">\n            <div className=\"flex items-start space-x-2\">\n              <Icon name=\"Info\" size={16} className=\"text-primary mt-0.5 flex-shrink-0\" />\n              <div className=\"text-sm text-muted-foreground\">\n                <p className=\"font-medium text-foreground mb-1\">Note importante</p>\n                <p>L'export peut prendre quelques instants selon la période sélectionnée. Le fichier sera téléchargé automatiquement.</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"flex justify-end space-x-3 p-6 border-t border-border\">\n          <Button\n            variant=\"outline\"\n            onClick={onClose}\n            disabled={isExporting}\n          >\n            Annuler\n          </Button>\n          <Button\n            variant=\"default\"\n            onClick={handleExport}\n            loading={isExporting}\n            disabled={!dateRange?.start || !dateRange?.end}\n            iconName=\"Download\"\n            iconPosition=\"left\"\n          >\n            {isExporting ? 'Export en cours...' : 'Exporter'}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExportModal;","import React from 'react';\nimport Icon from '../../../components/AppIcon';\n\nconst SpendingAnalytics = ({ \n  transactions = [],\n  selectedPeriod = 'month',\n  className = \"\"\n}) => {\n  const formatAmount = (amount) => {\n    return new Intl.NumberFormat('fr-FR', {\n      style: 'currency',\n      currency: 'EUR'\n    })?.format(amount);\n  };\n\n  // Calculate analytics\n  const calculateAnalytics = () => {\n    const now = new Date();\n    const currentMonth = now?.getMonth();\n    const currentYear = now?.getFullYear();\n    \n    const currentPeriodTransactions = transactions?.filter(t => {\n      const transactionDate = new Date(t.date);\n      return transactionDate?.getMonth() === currentMonth && \n             transactionDate?.getFullYear() === currentYear;\n    });\n\n    const totalIncome = currentPeriodTransactions?.filter(t => t?.type === 'credit')?.reduce((sum, t) => sum + t?.amount, 0);\n\n    const totalExpenses = currentPeriodTransactions?.filter(t => t?.type === 'debit')?.reduce((sum, t) => sum + t?.amount, 0);\n\n    // Category breakdown\n    const categoryTotals = currentPeriodTransactions?.filter(t => t?.type === 'debit')?.reduce((acc, t) => {\n        acc[t.category] = (acc?.[t?.category] || 0) + t?.amount;\n        return acc;\n      }, {});\n\n    const topCategories = Object.entries(categoryTotals)?.sort(([,a], [,b]) => b - a)?.slice(0, 5)?.map(([category, amount]) => ({\n        category,\n        amount,\n        percentage: totalExpenses > 0 ? (amount / totalExpenses) * 100 : 0\n      }));\n\n    return {\n      totalIncome,\n      totalExpenses,\n      netAmount: totalIncome - totalExpenses,\n      transactionCount: currentPeriodTransactions?.length,\n      topCategories,\n      averageTransaction: currentPeriodTransactions?.length > 0 \n        ? totalExpenses / currentPeriodTransactions?.filter(t => t?.type === 'debit')?.length \n        : 0\n    };\n  };\n\n  const analytics = calculateAnalytics();\n\n  const getCategoryIcon = (category) => {\n    const icons = {\n      'shopping': 'ShoppingBag',\n      'food': 'UtensilsCrossed',\n      'transport': 'Car',\n      'entertainment': 'Film',\n      'health': 'Heart',\n      'utilities': 'Zap',\n      'salary': 'Banknote',\n      'transfer': 'ArrowLeftRight',\n      'investment': 'TrendingUp',\n      'subscription': 'RefreshCw',\n      'cash': 'Banknote',\n      'other': 'MoreHorizontal'\n    };\n    return icons?.[category] || 'MoreHorizontal';\n  };\n\n  const getCategoryLabel = (category) => {\n    const labels = {\n      'shopping': 'Achats',\n      'food': 'Alimentation',\n      'transport': 'Transport',\n      'entertainment': 'Loisirs',\n      'health': 'Santé',\n      'utilities': 'Services',\n      'salary': 'Salaire',\n      'transfer': 'Virements',\n      'investment': 'Investissements',\n      'subscription': 'Abonnements',\n      'cash': 'Espèces',\n      'other': 'Autres'\n    };\n    return labels?.[category] || category;\n  };\n\n  return (\n    <div className={`bg-card border border-border rounded-lg p-6 ${className}`}>\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"text-lg font-semibold text-foreground\">Analyse des dépenses</h3>\n          <div className=\"flex items-center space-x-1 text-xs text-muted-foreground\">\n            <Icon name=\"Calendar\" size={12} />\n            <span>Ce mois</span>\n          </div>\n        </div>\n\n        {/* Summary Cards */}\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"p-4 bg-success/5 border border-success/20 rounded-lg\">\n            <div className=\"flex items-center space-x-2 mb-2\">\n              <Icon name=\"TrendingUp\" size={16} className=\"text-success\" />\n              <span className=\"text-sm font-medium text-success\">Revenus</span>\n            </div>\n            <div className=\"font-mono text-lg font-semibold text-success\">\n              {formatAmount(analytics?.totalIncome)}\n            </div>\n          </div>\n\n          <div className=\"p-4 bg-muted/50 border border-border rounded-lg\">\n            <div className=\"flex items-center space-x-2 mb-2\">\n              <Icon name=\"TrendingDown\" size={16} className=\"text-foreground\" />\n              <span className=\"text-sm font-medium text-foreground\">Dépenses</span>\n            </div>\n            <div className=\"font-mono text-lg font-semibold text-foreground\">\n              {formatAmount(analytics?.totalExpenses)}\n            </div>\n          </div>\n        </div>\n\n        {/* Net Amount */}\n        <div className={`p-4 rounded-lg border ${\n          analytics?.netAmount >= 0 \n            ? 'bg-success/5 border-success/20' :'bg-error/5 border-error/20'\n        }`}>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-2\">\n              <Icon \n                name={analytics?.netAmount >= 0 ? \"Plus\" : \"Minus\"} \n                size={16} \n                className={analytics?.netAmount >= 0 ? \"text-success\" : \"text-error\"} \n              />\n              <span className=\"text-sm font-medium text-foreground\">Solde net</span>\n            </div>\n            <div className={`font-mono text-lg font-semibold ${\n              analytics?.netAmount >= 0 ? 'text-success' : 'text-error'\n            }`}>\n              {analytics?.netAmount >= 0 ? '+' : ''}{formatAmount(analytics?.netAmount)}\n            </div>\n          </div>\n        </div>\n\n        {/* Quick Stats */}\n        <div className=\"grid grid-cols-2 gap-4 text-center\">\n          <div>\n            <div className=\"text-2xl font-mono font-semibold text-foreground\">\n              {analytics?.transactionCount}\n            </div>\n            <div className=\"text-xs text-muted-foreground\">Transactions</div>\n          </div>\n          <div>\n            <div className=\"text-2xl font-mono font-semibold text-foreground\">\n              {formatAmount(analytics?.averageTransaction)}\n            </div>\n            <div className=\"text-xs text-muted-foreground\">Moyenne</div>\n          </div>\n        </div>\n\n        {/* Top Categories */}\n        {analytics?.topCategories?.length > 0 && (\n          <div>\n            <h4 className=\"text-sm font-medium text-foreground mb-3\">Top catégories</h4>\n            <div className=\"space-y-3\">\n              {analytics?.topCategories?.map(({ category, amount, percentage }) => (\n                <div key={category} className=\"flex items-center space-x-3\">\n                  <div className=\"w-8 h-8 bg-primary/10 rounded-lg flex items-center justify-center flex-shrink-0\">\n                    <Icon name={getCategoryIcon(category)} size={14} color=\"var(--color-primary)\" />\n                  </div>\n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex items-center justify-between mb-1\">\n                      <span className=\"text-sm font-medium text-foreground truncate\">\n                        {getCategoryLabel(category)}\n                      </span>\n                      <span className=\"text-sm font-mono text-foreground\">\n                        {formatAmount(amount)}\n                      </span>\n                    </div>\n                    <div className=\"w-full bg-muted rounded-full h-1.5\">\n                      <div \n                        className=\"bg-primary h-1.5 rounded-full transition-all duration-300\"\n                        style={{ width: `${percentage}%` }}\n                      />\n                    </div>\n                    <div className=\"text-xs text-muted-foreground mt-1\">\n                      {percentage?.toFixed(1)}% du total\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Insights */}\n        <div className=\"p-4 bg-muted/30 rounded-lg\">\n          <div className=\"flex items-start space-x-2\">\n            <Icon name=\"Lightbulb\" size={16} className=\"text-primary mt-0.5 flex-shrink-0\" />\n            <div className=\"text-sm\">\n              <p className=\"font-medium text-foreground mb-1\">Conseil du mois</p>\n              <p className=\"text-muted-foreground\">\n                {analytics?.netAmount >= 0 \n                  ? \"Excellent ! Vous avez un solde positif ce mois-ci. Pensez à épargner une partie de ce surplus.\"\n                  : \"Vos dépenses dépassent vos revenus. Analysez vos catégories de dépenses pour identifier des économies possibles.\"\n                }\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SpendingAnalytics;","import React, { useState, useEffect, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Header from \"../../components/ui/Header\";\nimport AccountSelector from \"../../components/ui/AccountSelector\";\nimport ActionToolbar from \"../../components/ui/ActionToolbar\";\nimport SecurityIndicator from \"../../components/ui/SecurityIndicator\";\nimport TransactionCard from \"./components/TransactionCard\";\nimport FilterBar from \"./components/FilterBar\";\nimport MonthlyGroupHeader from \"./components/MonthlyGroupHeader\";\nimport TransactionDetailsModal from \"./components/TransactionDetailsModal\";\nimport ExportModal from \"./components/ExportModal\";\nimport SpendingAnalytics from \"./components/SpendingAnalytics\";\nimport Icon from \"../../components/AppIcon\";\nimport Button from \"../../components/ui/Button\";\n\nconst TransactionHistory = () => {\n  const navigate = useNavigate();\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  const [filters, setFilters] = useState({\n    search: \"\",\n    type: \"all\",\n    categories: [],\n    dateStart: \"\",\n    dateEnd: \"\",\n    amountMin: \"\",\n    amountMax: \"\",\n  });\n  const [sortBy, setSortBy] = useState(\"date\");\n  const [sortOrder, setSortOrder] = useState(\"desc\");\n  const [selectedTransactions, setSelectedTransactions] = useState([]);\n  const [selectedTransaction, setSelectedTransaction] = useState(null);\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n  const [showExportModal, setShowExportModal] = useState(false);\n  const [collapsedMonths, setCollapsedMonths] = useState(new Set());\n  const [isLoading, setIsLoading] = useState(false);\n  const [showAnalytics, setShowAnalytics] = useState(false);\n\n  useEffect(() => {}, []);\n  // Mock transaction data\n  const mockTransactions = [\n    {\n      id: \"1\",\n      date: \"2025-01-15T14:30:00Z\",\n      merchant: \"Carrefour Market\",\n      description: \"Courses alimentaires\",\n      amount: 87.45,\n      type: \"debit\",\n      category: \"food\",\n      status: \"completed\",\n      reference: \"CB1234567890\",\n      account: \"Compte Courant ****1234\",\n      location: \"Paris 15ème\",\n      balance: 2363.3,\n      additionalInfo: \"Paiement par carte bancaire\",\n    },\n    {\n      id: \"2\",\n      date: \"2025-01-14T09:15:00Z\",\n      merchant: \"Salaire Entreprise XYZ\",\n      description: \"Virement salaire janvier\",\n      amount: 3200.0,\n      type: \"credit\",\n      category: \"salary\",\n      status: \"completed\",\n      reference: \"VIR2025011401\",\n      account: \"Compte Courant ****1234\",\n      balance: 2450.75,\n    },\n    {\n      id: \"3\",\n      date: \"2025-01-13T16:45:00Z\",\n      merchant: \"Netflix\",\n      description: \"Abonnement mensuel\",\n      amount: 15.99,\n      type: \"debit\",\n      category: \"subscription\",\n      status: \"completed\",\n      reference: \"PRELEVEMENT_NET\",\n      account: \"Compte Courant ****1234\",\n      balance: 2434.76,\n    },\n    {\n      id: \"4\",\n      date: \"2025-01-12T11:20:00Z\",\n      merchant: \"Station Total\",\n      description: \"Carburant\",\n      amount: 65.3,\n      type: \"debit\",\n      category: \"transport\",\n      status: \"completed\",\n      reference: \"CB9876543210\",\n      account: \"Compte Courant ****1234\",\n      location: \"Autoroute A6\",\n      balance: 2450.75,\n    },\n    {\n      id: \"5\",\n      date: \"2025-01-10T19:30:00Z\",\n      merchant: \"Restaurant Le Bistrot\",\n      description: \"Dîner\",\n      amount: 45.8,\n      type: \"debit\",\n      category: \"food\",\n      status: \"completed\",\n      reference: \"CB5555666677\",\n      account: \"Compte Courant ****1234\",\n      location: \"Paris 11ème\",\n      balance: 2516.05,\n    },\n    {\n      id: \"6\",\n      date: \"2025-01-08T14:00:00Z\",\n      merchant: \"Virement vers Marie Dupont\",\n      description: \"Remboursement restaurant\",\n      amount: 22.9,\n      type: \"debit\",\n      category: \"transfer\",\n      status: \"completed\",\n      reference: \"VIR2025010801\",\n      account: \"Compte Courant ****1234\",\n      balance: 2561.85,\n    },\n    {\n      id: \"7\",\n      date: \"2025-01-05T10:15:00Z\",\n      merchant: \"Pharmacie Centrale\",\n      description: \"Médicaments\",\n      amount: 28.5,\n      type: \"debit\",\n      category: \"health\",\n      status: \"completed\",\n      reference: \"CB1111222233\",\n      account: \"Compte Courant ****1234\",\n      balance: 2584.75,\n    },\n    {\n      id: \"8\",\n      date: \"2025-01-03T08:45:00Z\",\n      merchant: \"EDF\",\n      description: \"Facture électricité décembre\",\n      amount: 89.2,\n      type: \"debit\",\n      category: \"utilities\",\n      status: \"completed\",\n      reference: \"PRELEVEMENT_EDF\",\n      account: \"Compte Courant ****1234\",\n      balance: 2613.25,\n    },\n    {\n      id: \"9\",\n      date: \"2024-12-28T15:30:00Z\",\n      merchant: \"Amazon\",\n      description: \"Commande en ligne\",\n      amount: 156.99,\n      type: \"debit\",\n      category: \"shopping\",\n      status: \"completed\",\n      reference: \"CB7777888899\",\n      account: \"Compte Courant ****1234\",\n      balance: 2702.45,\n    },\n    {\n      id: \"10\",\n      date: \"2024-12-25T12:00:00Z\",\n      merchant: \"Virement reçu Pierre Martin\",\n      description: \"Cadeau Noël\",\n      amount: 100.0,\n      type: \"credit\",\n      category: \"transfer\",\n      status: \"completed\",\n      reference: \"VIR2024122501\",\n      account: \"Compte Courant ****1234\",\n      balance: 2859.44,\n    },\n  ];\n\n  // Mock accounts data\n  const mockAccounts = [\n    {\n      id: \"1\",\n      name: \"Compte Courant\",\n      number: \"****1234\",\n      balance: 2450.75,\n      type: \"checking\",\n    },\n    {\n      id: \"2\",\n      name: \"Livret A\",\n      number: \"****5678\",\n      balance: 15680.2,\n      type: \"savings\",\n    },\n    {\n      id: \"3\",\n      name: \"Compte Professionnel\",\n      number: \"****9012\",\n      balance: 8920.45,\n      type: \"business\",\n    },\n  ];\n\n  // Filter and sort transactions\n  const filteredAndSortedTransactions = useMemo(() => {\n    let filtered = [...mockTransactions];\n\n    // Apply filters\n    if (filters?.search) {\n      const searchTerm = filters?.search?.toLowerCase();\n      filtered = filtered?.filter(\n        (t) =>\n          t?.merchant?.toLowerCase()?.includes(searchTerm) ||\n          t?.description?.toLowerCase()?.includes(searchTerm) ||\n          t?.reference?.toLowerCase()?.includes(searchTerm)\n      );\n    }\n\n    if (filters?.type && filters?.type !== \"all\") {\n      if (filters?.type === \"pending\") {\n        filtered = filtered?.filter((t) => t?.status === \"pending\");\n      } else {\n        filtered = filtered?.filter((t) => t?.type === filters?.type);\n      }\n    }\n\n    if (filters?.categories && filters?.categories?.length > 0) {\n      filtered = filtered?.filter((t) =>\n        filters?.categories?.includes(t?.category)\n      );\n    }\n\n    if (filters?.dateStart) {\n      filtered = filtered?.filter(\n        (t) => new Date(t.date) >= new Date(filters.dateStart)\n      );\n    }\n\n    if (filters?.dateEnd) {\n      filtered = filtered?.filter(\n        (t) => new Date(t.date) <= new Date(filters.dateEnd)\n      );\n    }\n\n    if (filters?.amountMin) {\n      filtered = filtered?.filter(\n        (t) => t?.amount >= parseFloat(filters?.amountMin)\n      );\n    }\n\n    if (filters?.amountMax) {\n      filtered = filtered?.filter(\n        (t) => t?.amount <= parseFloat(filters?.amountMax)\n      );\n    }\n\n    // Apply sorting\n    filtered?.sort((a, b) => {\n      let comparison = 0;\n\n      switch (sortBy) {\n        case \"date\":\n          comparison = new Date(a.date) - new Date(b.date);\n          break;\n        case \"amount\":\n          comparison = a?.amount - b?.amount;\n          break;\n        case \"merchant\":\n          comparison = (a?.merchant || a?.description)?.localeCompare(\n            b?.merchant || b?.description\n          );\n          break;\n        default:\n          comparison = new Date(a.date) - new Date(b.date);\n      }\n\n      return sortOrder === \"desc\" ? -comparison : comparison;\n    });\n\n    return filtered;\n  }, [mockTransactions, filters, sortBy, sortOrder]);\n\n  // Group transactions by month\n  const groupedTransactions = useMemo(() => {\n    const groups = {};\n\n    filteredAndSortedTransactions?.forEach((transaction) => {\n      const date = new Date(transaction.date);\n      const key = `${date?.getFullYear()}-${date?.getMonth()}`;\n\n      if (!groups?.[key]) {\n        groups[key] = {\n          year: date?.getFullYear(),\n          month: date?.getMonth() + 1,\n          transactions: [],\n          totalIncome: 0,\n          totalExpenses: 0,\n        };\n      }\n\n      groups?.[key]?.transactions?.push(transaction);\n\n      if (transaction?.type === \"credit\") {\n        groups[key].totalIncome += transaction?.amount;\n      } else {\n        groups[key].totalExpenses += transaction?.amount;\n      }\n    });\n\n    return Object.values(groups)?.sort((a, b) => {\n      const dateA = new Date(a.year, a.month - 1);\n      const dateB = new Date(b.year, b.month - 1);\n      return dateB - dateA;\n    });\n  }, [filteredAndSortedTransactions]);\n\n  const handleTransactionSelect = (transaction) => {\n    setSelectedTransaction(transaction);\n    setShowDetailsModal(true);\n  };\n\n  const handleBulkSelect = (transaction) => {\n    setSelectedTransactions((prev) => {\n      const isSelected = prev?.some((t) => t?.id === transaction?.id);\n      if (isSelected) {\n        return prev?.filter((t) => t?.id !== transaction?.id);\n      } else {\n        return [...prev, transaction];\n      }\n    });\n  };\n\n  const handleDispute = (transaction) => {\n    console.log(\"Disputing transaction:\", transaction);\n    // In a real app, this would open a dispute form or navigate to dispute page\n  };\n\n  const handleExport = (exportData) => {\n    console.log(\"Exporting data:\", exportData);\n    // In a real app, this would trigger the actual export\n  };\n\n  const handleClearFilters = () => {\n    setFilters({\n      search: \"\",\n      type: \"all\",\n      categories: [],\n      dateStart: \"\",\n      dateEnd: \"\",\n      amountMin: \"\",\n      amountMax: \"\",\n    });\n  };\n\n  const toggleMonthCollapse = (monthKey) => {\n    setCollapsedMonths((prev) => {\n      const newSet = new Set(prev);\n      if (newSet?.has(monthKey)) {\n        newSet?.delete(monthKey);\n      } else {\n        newSet?.add(monthKey);\n      }\n      return newSet;\n    });\n  };\n\n  const handleSortChange = (newSortBy) => {\n    if (sortBy === newSortBy) {\n      setSortOrder((prev) => (prev === \"asc\" ? \"desc\" : \"asc\"));\n    } else {\n      setSortBy(newSortBy);\n      setSortOrder(\"desc\");\n    }\n  };\n\n  const customActions = [\n    {\n      id: \"export\",\n      label: \"Exporter\",\n      icon: \"Download\",\n      variant: \"outline\",\n      primary: true,\n      onClick: () => setShowExportModal(true),\n    },\n    {\n      id: \"analytics\",\n      label: showAnalytics ? \"Masquer analyse\" : \"Analyse\",\n      icon: \"BarChart3\",\n      variant: \"ghost\",\n      primary: false,\n      onClick: () => setShowAnalytics(!showAnalytics),\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n      <div className=\"pt-16\">\n        <div className=\"max-w-screen-2xl mx-auto\">\n          <div className=\"flex flex-col lg:flex-row min-h-screen\">\n            {/* Desktop Sidebar */}\n            <div className=\"hidden lg:block w-80 border-r border-border bg-card\">\n              <div className=\"sticky top-16 h-[calc(100vh-4rem)] overflow-y-auto\">\n                <div className=\"p-6 space-y-6\">\n                  {/* Account Selector */}\n                  <div>\n                    <h2 className=\"text-sm font-medium text-muted-foreground mb-3\">\n                      Compte sélectionné\n                    </h2>\n                    <AccountSelector\n                      accounts={mockAccounts}\n                      selectedAccount={selectedAccount}\n                      onAccountSelect={setSelectedAccount}\n                    />\n                  </div>\n\n                  {/* Filters */}\n                  <FilterBar\n                    filters={filters}\n                    onFiltersChange={setFilters}\n                    onClearFilters={handleClearFilters}\n                    isSticky={false}\n                  />\n\n                  {/* Sort Options */}\n                  <div>\n                    <h3 className=\"text-sm font-medium text-foreground mb-3\">\n                      Tri\n                    </h3>\n                    <div className=\"space-y-2\">\n                      {[\n                        { id: \"date\", label: \"Date\", icon: \"Calendar\" },\n                        { id: \"amount\", label: \"Montant\", icon: \"Euro\" },\n                        { id: \"merchant\", label: \"Marchand\", icon: \"Store\" },\n                      ]?.map((option) => (\n                        <button\n                          key={option?.id}\n                          onClick={() => handleSortChange(option?.id)}\n                          className={`w-full flex items-center justify-between p-2 rounded-lg text-sm transition-smooth ${\n                            sortBy === option?.id\n                              ? \"bg-primary/10 text-primary\"\n                              : \"text-muted-foreground hover:bg-muted hover:text-foreground\"\n                          }`}\n                        >\n                          <div className=\"flex items-center space-x-2\">\n                            <Icon name={option?.icon} size={14} />\n                            <span>{option?.label}</span>\n                          </div>\n                          {sortBy === option?.id && (\n                            <Icon\n                              name={\n                                sortOrder === \"asc\" ? \"ArrowUp\" : \"ArrowDown\"\n                              }\n                              size={14}\n                            />\n                          )}\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n\n                  {/* Security Indicator */}\n                  <div className=\"pt-4 border-t border-border\">\n                    <SecurityIndicator />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Main Content */}\n            <div className=\"flex-1 flex flex-col\">\n              {/* Mobile Header */}\n              <div className=\"lg:hidden bg-card border-b border-border p-4\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h1 className=\"text-xl font-semibold text-foreground\">\n                    Historique\n                  </h1>\n                  <div className=\"flex items-center space-x-2\">\n                    <SecurityIndicator />\n                  </div>\n                </div>\n                <AccountSelector\n                  accounts={mockAccounts}\n                  selectedAccount={selectedAccount}\n                  onAccountSelect={setSelectedAccount}\n                />\n              </div>\n\n              {/* Filter Bar */}\n              <div className=\"lg:hidden\">\n                <FilterBar\n                  filters={filters}\n                  onFiltersChange={setFilters}\n                  onClearFilters={handleClearFilters}\n                  isSticky={true}\n                />\n              </div>\n\n              {/* Content Area */}\n              <div className=\"flex-1 flex\">\n                {/* Transactions List */}\n                <div className=\"flex-1 overflow-y-auto\">\n                  {/* Action Toolbar */}\n                  <div className=\"sticky top-3 z-20 bg-background/95 backdrop-blur-sm border-b border-border\">\n                    <div className=\"p-4\">\n                      <ActionToolbar\n                        actions={customActions}\n                        context=\"transaction\"\n                      />\n                    </div>\n                  </div>\n\n                  {/* Transactions */}\n                  <div className=\"p-4\">\n                    {isLoading ? (\n                      <div className=\"flex items-center justify-center py-12\">\n                        <div className=\"text-center\">\n                          <Icon\n                            name=\"Loader2\"\n                            size={32}\n                            className=\"animate-spin text-primary mx-auto mb-4\"\n                          />\n                          <p className=\"text-muted-foreground\">\n                            Chargement des transactions...\n                          </p>\n                        </div>\n                      </div>\n                    ) : groupedTransactions?.length > 0 ? (\n                      <div className=\"space-y-6\">\n                        {groupedTransactions?.map((group) => {\n                          const monthKey = `${group?.year}-${group?.month}`;\n                          const isCollapsed = collapsedMonths?.has(monthKey);\n\n                          return (\n                            <div key={monthKey}>\n                              <MonthlyGroupHeader\n                                month={group?.month}\n                                year={group?.year}\n                                totalTransactions={group?.transactions?.length}\n                                totalIncome={group?.totalIncome}\n                                totalExpenses={group?.totalExpenses}\n                                isCollapsed={isCollapsed}\n                                onToggle={() => toggleMonthCollapse(monthKey)}\n                              />\n                              {!isCollapsed && (\n                                <div className=\"space-y-3 mt-4\">\n                                  {group?.transactions?.map((transaction) => (\n                                    <TransactionCard\n                                      key={transaction?.id}\n                                      transaction={transaction}\n                                      onSelect={handleTransactionSelect}\n                                      isSelected={selectedTransactions?.some(\n                                        (t) => t?.id === transaction?.id\n                                      )}\n                                      showAccount={mockAccounts?.length > 1}\n                                      onDispute={handleDispute}\n                                    />\n                                  ))}\n                                </div>\n                              )}\n                            </div>\n                          );\n                        })}\n                      </div>\n                    ) : (\n                      <div className=\"flex items-center justify-center py-12\">\n                        <div className=\"text-center\">\n                          <Icon\n                            name=\"Receipt\"\n                            size={48}\n                            className=\"text-muted-foreground mx-auto mb-4\"\n                          />\n                          <h3 className=\"text-lg font-medium text-foreground mb-2\">\n                            Aucune transaction trouvée\n                          </h3>\n                          <p className=\"text-muted-foreground mb-4\">\n                            Aucune transaction ne correspond à vos critères de\n                            recherche.\n                          </p>\n                          <Button\n                            variant=\"outline\"\n                            onClick={handleClearFilters}\n                            iconName=\"RefreshCw\"\n                            iconPosition=\"left\"\n                          >\n                            Effacer les filtres\n                          </Button>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                {/* Desktop Analytics Panel */}\n                {showAnalytics && (\n                  <div className=\"hidden lg:block w-80 border-l border-border bg-card\">\n                    <div className=\"sticky top-16 h-[calc(100vh-4rem)] overflow-y-auto\">\n                      <SpendingAnalytics\n                        transactions={filteredAndSortedTransactions}\n                        className=\"m-4\"\n                      />\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Mobile Analytics */}\n        {showAnalytics && (\n          <div className=\"lg:hidden bg-card border-t border-border\">\n            <SpendingAnalytics\n              transactions={filteredAndSortedTransactions}\n              className=\"m-4\"\n            />\n          </div>\n        )}\n\n        {/* Mobile Action Toolbar */}\n        <div className=\"lg:hidden\">\n          <ActionToolbar\n            actions={customActions}\n            context=\"transaction\"\n            position=\"fixed-bottom\"\n          />\n        </div>\n      </div>\n      {/* Modals */}\n      <TransactionDetailsModal\n        transaction={selectedTransaction}\n        isOpen={showDetailsModal}\n        onClose={() => {\n          setShowDetailsModal(false);\n          setSelectedTransaction(null);\n        }}\n        onDispute={handleDispute}\n      />\n      <ExportModal\n        isOpen={showExportModal}\n        onClose={() => setShowExportModal(false)}\n        onExport={handleExport}\n      />\n    </div>\n  );\n};\n\nexport default TransactionHistory;\n"],"names":["TransactionCard","transaction","onSelect","isSelected","showAccount","onDispute","formatAmount","amount","_a","formatDate","date","formatTime","getCategoryIcon","category","icons","getStatusColor","status","getStatusBg","jsx","jsxs","Icon","Fragment","e","FilterBar","filters","onFiltersChange","onClearFilters","isSticky","isExpanded","setIsExpanded","useState","dateRange","setDateRange","amountRange","setAmountRange","categories","transactionTypes","handleCategoryToggle","categoryId","currentCategories","newCategories","id","handleTypeChange","type","handleDateRangeChange","field","value","newRange","handleAmountRangeChange","activeFiltersCount","count","Button","Input","MonthlyGroupHeader","month","year","totalTransactions","totalIncome","totalExpenses","isCollapsed","onToggle","getMonthName","months","netAmount","TransactionDetailsModal","isOpen","onClose","ExportModal","onExport","exportFormat","setExportFormat","includeOptions","setIncludeOptions","isExporting","setIsExporting","handleExport","resolve","exportData","formatOptions","format","prev","key","label","SpendingAnalytics","transactions","selectedPeriod","className","analytics","now","currentMonth","currentYear","currentPeriodTransactions","t","transactionDate","sum","_b","categoryTotals","_c","acc","topCategories","_f","_e","_d","a","b","_g","getCategoryLabel","labels","percentage","TransactionHistory","useNavigate","selectedAccount","setSelectedAccount","setFilters","sortBy","setSortBy","sortOrder","setSortOrder","selectedTransactions","setSelectedTransactions","selectedTransaction","setSelectedTransaction","showDetailsModal","setShowDetailsModal","showExportModal","setShowExportModal","collapsedMonths","setCollapsedMonths","isLoading","setIsLoading","showAnalytics","setShowAnalytics","useEffect","mockTransactions","mockAccounts","filteredAndSortedTransactions","useMemo","filtered","searchTerm","comparison","groupedTransactions","groups","dateA","handleTransactionSelect","handleDispute","handleClearFilters","toggleMonthCollapse","monthKey","newSet","handleSortChange","newSortBy","customActions","Header","AccountSelector","option","SecurityIndicator","ActionToolbar","group"],"mappings":"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"}