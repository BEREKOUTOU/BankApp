{"version":3,"file":"Select-Saw36Tm8.js","sources":["../../src/components/ui/Select.jsx"],"sourcesContent":["// components/ui/Select.jsx - Shadcn style Select\nimport React, { useState } from \"react\";\nimport { ChevronDown, Check, Search, X } from \"lucide-react\";\nimport { cn } from \"../../utils/cn\";\nimport Button from \"./Button\";\nimport Input from \"./Input\";\n\nconst Select = React.forwardRef(({\n    className,\n    options = [],\n    value,\n    defaultValue,\n    placeholder = \"Select an option\",\n    multiple = false,\n    disabled = false,\n    required = false,\n    label,\n    description,\n    error,\n    searchable = false,\n    clearable = false,\n    loading = false,\n    id,\n    name,\n    onChange,\n    onOpenChange,\n    ...props\n}, ref) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    // Generate unique ID if not provided\n    const selectId = id || `select-${Math.random()?.toString(36)?.substr(2, 9)}`;\n\n    // Filter options based on search\n    const filteredOptions = searchable && searchTerm\n        ? options?.filter(option =>\n            option?.label?.toLowerCase()?.includes(searchTerm?.toLowerCase()) ||\n            (option?.value && option?.value?.toString()?.toLowerCase()?.includes(searchTerm?.toLowerCase()))\n        )\n        : options;\n\n    // Get selected option(s) for display\n    const getSelectedDisplay = () => {\n        if (!value) return placeholder;\n\n        if (multiple) {\n            const selectedOptions = options?.filter(opt => value?.includes(opt?.value));\n            if (selectedOptions?.length === 0) return placeholder;\n            if (selectedOptions?.length === 1) return selectedOptions?.[0]?.label;\n            return `${selectedOptions?.length} items selected`;\n        }\n\n        const selectedOption = options?.find(opt => opt?.value === value);\n        return selectedOption ? selectedOption?.label : placeholder;\n    };\n\n    const handleToggle = () => {\n        if (!disabled) {\n            const newIsOpen = !isOpen;\n            setIsOpen(newIsOpen);\n            onOpenChange?.(newIsOpen);\n            if (!newIsOpen) {\n                setSearchTerm(\"\");\n            }\n        }\n    };\n\n    const handleOptionSelect = (option) => {\n        if (multiple) {\n            const newValue = value || [];\n            const updatedValue = newValue?.includes(option?.value)\n                ? newValue?.filter(v => v !== option?.value)\n                : [...newValue, option?.value];\n            onChange?.(updatedValue);\n        } else {\n            onChange?.(option?.value);\n            setIsOpen(false);\n            onOpenChange?.(false);\n        }\n    };\n\n    const handleClear = (e) => {\n        e?.stopPropagation();\n        onChange?.(multiple ? [] : '');\n    };\n\n    const handleSearchChange = (e) => {\n        setSearchTerm(e?.target?.value);\n    };\n\n    const isSelected = (optionValue) => {\n        if (multiple) {\n            return value?.includes(optionValue) || false;\n        }\n        return value === optionValue;\n    };\n\n    const hasValue = multiple ? value?.length > 0 : value !== undefined && value !== '';\n\n    return (\n        <div className={cn(\"relative\", className)}>\n            {label && (\n                <label\n                    htmlFor={selectId}\n                    className={cn(\n                        \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 mb-2 block\",\n                        error ? \"text-destructive\" : \"text-foreground\"\n                    )}\n                >\n                    {label}\n                    {required && <span className=\"text-destructive ml-1\">*</span>}\n                </label>\n            )}\n            <div className=\"relative\">\n                <button\n                    ref={ref}\n                    id={selectId}\n                    type=\"button\"\n                    className={cn(\n                        \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-white text-black px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n                        error && \"border-destructive focus:ring-destructive\",\n                        !hasValue && \"text-muted-foreground\"\n                    )}\n                    onClick={handleToggle}\n                    disabled={disabled}\n                    aria-expanded={isOpen}\n                    aria-haspopup=\"listbox\"\n                    {...props}\n                >\n                    <span className=\"truncate\">{getSelectedDisplay()}</span>\n\n                    <div className=\"flex items-center gap-1\">\n                        {loading && (\n                            <svg className=\"animate-spin h-4 w-4\" viewBox=\"0 0 24 24\">\n                                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" fill=\"none\" />\n                                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n                            </svg>\n                        )}\n\n                        {clearable && hasValue && !loading && (\n                            <Button\n                                variant=\"ghost\"\n                                size=\"icon\"\n                                className=\"h-4 w-4\"\n                                onClick={handleClear}\n                            >\n                                <X className=\"h-3 w-3\" />\n                            </Button>\n                        )}\n\n                        <ChevronDown className={cn(\"h-4 w-4 transition-transform\", isOpen && \"rotate-180\")} />\n                    </div>\n                </button>\n\n                {/* Hidden native select for form submission */}\n                <select\n                    name={name}\n                    value={value || ''}\n                    onChange={() => { }} // Controlled by our custom logic\n                    className=\"sr-only\"\n                    tabIndex={-1}\n                    multiple={multiple}\n                    required={required}\n                >\n                    <option value=\"\">Select...</option>\n                    {options?.map(option => (\n                        <option key={option?.value} value={option?.value}>\n                            {option?.label}\n                        </option>\n                    ))}\n                </select>\n\n                {/* Dropdown */}\n                {isOpen && (\n                    <div className=\"absolute z-50 w-full mt-1 bg-white text-black border border-border rounded-md shadow-md\">\n                        {searchable && (\n                            <div className=\"p-2 border-b\">\n                                <div className=\"relative\">\n                                    <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n                                    <Input\n                                        placeholder=\"Search options...\"\n                                        value={searchTerm}\n                                        onChange={handleSearchChange}\n                                        className=\"pl-8\"\n                                    />\n                                </div>\n                            </div>\n                        )}\n\n                        <div className=\"py-1 max-h-60 overflow-auto\">\n                            {filteredOptions?.length === 0 ? (\n                                <div className=\"px-3 py-2 text-sm text-muted-foreground\">\n                                    {searchTerm ? 'No options found' : 'No options available'}\n                                </div>\n                            ) : (\n                                filteredOptions?.map((option) => (\n                                    <div\n                                        key={option?.value}\n                                        className={cn(\n                                            \"relative flex cursor-pointer select-none items-center rounded-sm px-3 py-2 text-sm outline-none hover:bg-accent hover:text-accent-foreground\",\n                                            isSelected(option?.value) && \"bg-primary text-primary-foreground\",\n                                            option?.disabled && \"pointer-events-none opacity-50\"\n                                        )}\n                                        onClick={() => !option?.disabled && handleOptionSelect(option)}\n                                    >\n                                        <span className=\"flex-1\">{option?.label}</span>\n                                        {multiple && isSelected(option?.value) && (\n                                            <Check className=\"h-4 w-4\" />\n                                        )}\n                                        {option?.description && (\n                                            <span className=\"text-xs text-muted-foreground ml-2\">\n                                                {option?.description}\n                                            </span>\n                                        )}\n                                    </div>\n                                ))\n                            )}\n                        </div>\n                    </div>\n                )}\n            </div>\n            {description && !error && (\n                <p className=\"text-sm text-muted-foreground mt-1\">\n                    {description}\n                </p>\n            )}\n            {error && (\n                <p className=\"text-sm text-destructive mt-1\">\n                    {error}\n                </p>\n            )}\n        </div>\n    );\n});\n\nSelect.displayName = \"Select\";\n\nexport default Select;"],"names":["Select","React","className","options","value","defaultValue","placeholder","multiple","disabled","required","label","description","error","searchable","clearable","loading","id","name","onChange","onOpenChange","props","ref","isOpen","setIsOpen","useState","searchTerm","setSearchTerm","selectId","_b","_a","filteredOptions","option","_e","_d","_c","getSelectedDisplay","selectedOptions","opt","selectedOption","handleToggle","newIsOpen","handleOptionSelect","newValue","updatedValue","v","handleClear","handleSearchChange","isSelected","optionValue","hasValue","cn","jsxs","jsx","Button","X","ChevronDown","Search","Input","Check"],"mappings":"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"}